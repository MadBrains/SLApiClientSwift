//
// ShininvestAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ShininvestAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShininvestDeliveryCities(completion: @escaping ((_ data: [String]?,_ error: Error?) -> Void)) {
        getShininvestDeliveryCitiesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /shininvest/delivery/cities/
     - Получить список населенных пунктов, по которым осуществляется доставка
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ "", "" ]}]

     - returns: RequestBuilder<[String]> 
     */
    open class func getShininvestDeliveryCitiesWithRequestBuilder() -> RequestBuilder<[String]> {
        let path = "/shininvest/delivery/cities/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[String]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestCardActivate(body: CardActivation, completion: @escaping ((_ data: VirtualCard?,_ error: Error?) -> Void)) {
        postShininvestCardActivateWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/card/activate/
     - Активировать карту, с последующей конвертацией в виртуальную карту, и переносом средств на нее.
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "isCreated" : true,
  "isVerified" : true,
  "name" : "name",
  "cardNumber" : "cardNumber"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<VirtualCard> 
     */
    open class func postShininvestCardActivateWithRequestBuilder(body: CardActivation) -> RequestBuilder<VirtualCard> {
        let path = "/shininvest/card/activate/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VirtualCard>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestCardInfo(body: CardIdentification, completion: @escaping ((_ data: CardInfo?,_ error: Error?) -> Void)) {
        postShininvestCardInfoWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/card/info/
     - Запрос на текущие средства и скидки по карте. Карта при этом должна быть известна(активированна, или создана виртуальная)
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "saved" : 6.02745618307040320615897144307382404804229736328125,
  "serviceDiscount" : 1.46581298050294517310021547018550336360931396484375,
  "catalogDiscount" : 0.80082819046101150206595775671303272247314453125
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<CardInfo> 
     */
    open class func postShininvestCardInfoWithRequestBuilder(body: CardIdentification) -> RequestBuilder<CardInfo> {
        let path = "/shininvest/card/info/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CardInfo>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestCardVirtual(body: CreateVirtual, completion: @escaping ((_ data: VirtualCard?,_ error: Error?) -> Void)) {
        postShininvestCardVirtualWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/card/virtual/
     - Получить карту по номеру телефона и фамилии. Если карта была создана на этот номер, то возвращаются ее данные. Иначе создастся новая
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "isCreated" : true,
  "isVerified" : true,
  "name" : "name",
  "cardNumber" : "cardNumber"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<VirtualCard> 
     */
    open class func postShininvestCardVirtualWithRequestBuilder(body: CreateVirtual) -> RequestBuilder<VirtualCard> {
        let path = "/shininvest/card/virtual/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<VirtualCard>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestCardVirtualTransfer(body: TransferInput, completion: @escaping ((_ error: Error?) -> Void)) {
        postShininvestCardVirtualTransferWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     - POST /shininvest/card/virtual/transfer/
     - Перенести накопления с карты на виртуальную карту
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     
     - parameter body: (body)  

     - returns: RequestBuilder<Void> 
     */
    open class func postShininvestCardVirtualTransferWithRequestBuilder(body: TransferInput) -> RequestBuilder<Void> {
        let path = "/shininvest/card/virtual/transfer/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestDeliveryPrice(body: DeliveryPrice, completion: @escaping ((_ data: InlineResponse200?,_ error: Error?) -> Void)) {
        postShininvestDeliveryPriceWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/delivery/price/
     - Расчитать цену доставки
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "volume" : 6.0274563,
  "price" : 0.8008282
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<InlineResponse200> 
     */
    open class func postShininvestDeliveryPriceWithRequestBuilder(body: DeliveryPrice) -> RequestBuilder<InlineResponse200> {
        let path = "/shininvest/delivery/price/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<InlineResponse200>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestPromocode(body: Promocode, completion: @escaping ((_ data: [PromocodeResponse]?,_ error: Error?) -> Void)) {
        postShininvestPromocodeWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/promocode/
     - Запрос на проверку промокода
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "itemId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "quantity" : 6,
  "isApplied" : true,
  "newPrice" : 0.8008282
}, {
  "itemId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "quantity" : 6,
  "isApplied" : true,
  "newPrice" : 0.8008282
} ]}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<[PromocodeResponse]> 
     */
    open class func postShininvestPromocodeWithRequestBuilder(body: Promocode) -> RequestBuilder<[PromocodeResponse]> {
        let path = "/shininvest/promocode/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[PromocodeResponse]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postShininvestTime(body: ShininvestTimeQuery, completion: @escaping ((_ data: [ShininvestTimeblock]?,_ error: Error?) -> Void)) {
        postShininvestTimeWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /shininvest/time/
     - Запрос поиска временных слотов
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "date" : "2017-07-21",
  "resourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "time" : 32400.0
}, {
  "date" : "2017-07-21",
  "resourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "time" : 32400.0
} ]}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<[ShininvestTimeblock]> 
     */
    open class func postShininvestTimeWithRequestBuilder(body: ShininvestTimeQuery) -> RequestBuilder<[ShininvestTimeblock]> {
        let path = "/shininvest/time/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ShininvestTimeblock]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
