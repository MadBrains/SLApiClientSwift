//
// TalanAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class TalanAPI {
    /**
     Удаление закладки
     
     - parameter bookmarkId: (path) Идентификатор закладки 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func deleteTalanBookmarksByBookmarkid(bookmarkId: String, completion: @escaping ((_ error: Error?) -> Void)) {
        deleteTalanBookmarksByBookmarkidWithRequestBuilder(bookmarkId: bookmarkId).execute { (response, error) -> Void in
            completion(error);
        }
    }


    /**
     Удаление закладки
     - DELETE /talan/bookmarks/{BookmarkId}/
     - Удаление закладки
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     
     - parameter bookmarkId: (path) Идентификатор закладки 

     - returns: RequestBuilder<Void> 
     */
    open class func deleteTalanBookmarksByBookmarkidWithRequestBuilder(bookmarkId: String) -> RequestBuilder<Void> {
        var path = "/talan/bookmarks/{BookmarkId}/"
        path = path.replacingOccurrences(of: "{BookmarkId}", with: "\(bookmarkId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Список закладок пользователя
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getTalanBookmarks(completion: @escaping ((_ data: [TalanBookmarks]?,_ error: Error?) -> Void)) {
        getTalanBookmarksWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Список закладок пользователя
     - GET /talan/bookmarks/
     - Список закладок пользователя
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "notification" : true,
  "count" : 0,
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "",
  "title" : "title"
}, {
  "notification" : true,
  "count" : 0,
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "",
  "title" : "title"
} ]}]

     - returns: RequestBuilder<[TalanBookmarks]> 
     */
    open class func getTalanBookmarksWithRequestBuilder() -> RequestBuilder<[TalanBookmarks]> {
        let path = "/talan/bookmarks/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[TalanBookmarks]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Создание закладки
     
     - parameter bookmark: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postTalanBookmarks(bookmark: TalanBookmarks, completion: @escaping ((_ data: TalanBookmarks?,_ error: Error?) -> Void)) {
        postTalanBookmarksWithRequestBuilder(bookmark: bookmark).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Создание закладки
     - POST /talan/bookmarks/
     - Создание закладки
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "notification" : true,
  "count" : 0,
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "",
  "title" : "title"
}}]
     
     - parameter bookmark: (body)  

     - returns: RequestBuilder<TalanBookmarks> 
     */
    open class func postTalanBookmarksWithRequestBuilder(bookmark: TalanBookmarks) -> RequestBuilder<TalanBookmarks> {
        let path = "/talan/bookmarks/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bookmark)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<TalanBookmarks>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Обновить закладку
     
     - parameter bookmarkId: (path) Идентификатор закладки 
     - parameter bookmark: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postTalanBookmarksByBookmarkid(bookmarkId: String, bookmark: TalanBookmarks, completion: @escaping ((_ data: TalanBookmarks?,_ error: Error?) -> Void)) {
        postTalanBookmarksByBookmarkidWithRequestBuilder(bookmarkId: bookmarkId, bookmark: bookmark).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Обновить закладку
     - POST /talan/bookmarks/{BookmarkId}/
     - Обновить закладку
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "notification" : true,
  "count" : 0,
  "description" : "description",
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "",
  "title" : "title"
}}]
     
     - parameter bookmarkId: (path) Идентификатор закладки 
     - parameter bookmark: (body)  

     - returns: RequestBuilder<TalanBookmarks> 
     */
    open class func postTalanBookmarksByBookmarkidWithRequestBuilder(bookmarkId: String, bookmark: TalanBookmarks) -> RequestBuilder<TalanBookmarks> {
        var path = "/talan/bookmarks/{BookmarkId}/"
        path = path.replacingOccurrences(of: "{BookmarkId}", with: "\(bookmarkId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: bookmark)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<TalanBookmarks>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
