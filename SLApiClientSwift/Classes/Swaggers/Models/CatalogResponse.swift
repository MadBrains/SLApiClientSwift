//
// CatalogResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Ответ поискового запроса каталога с агрегациями */

open class CatalogResponse: Codable {

    /** Результаты ф-ций агрегации */
    public var aggregations: Any?
    /** Общее количество элементов, удовлетворяющих запросу */
    public var count: Int?
    public var results: [CatalogItemWithRemains]?


    public init(aggregations: Any?, count: Int?, results: [CatalogItemWithRemains]?) {
        self.aggregations = aggregations
        self.count = count
        self.results = results
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(aggregations, forKey: "aggregations")
        try container.encodeIfPresent(count, forKey: "count")
        try container.encodeIfPresent(results, forKey: "results")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                aggregations = try container.decodeIfPresent(Any.self, forKey: "aggregations")
                count = try container.decodeIfPresent(Int.self, forKey: "count")
                results = try container.decodeIfPresent([CatalogItemWithRemains].self, forKey: "results")
    }
}

