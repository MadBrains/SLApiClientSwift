//
// DcAggregationReq.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Мини-агрегационный запрос для получения карт и их привязок */

open class DcAggregationReq: Codable {

    /** Отбирает карты с бонусами &gt;&#x3D; указанного */
    public var minBonus: Int64?
    /** Выбрать только из указанных номеров карт */
    public var onlyNumbers: [String]?
    /** Если установлен в true, то отбрасывает все карты без описаний */
    public var skipEmptyDescription: Bool?


    public init(minBonus: Int64?, onlyNumbers: [String]?, skipEmptyDescription: Bool?) {
        self.minBonus = minBonus
        self.onlyNumbers = onlyNumbers
        self.skipEmptyDescription = skipEmptyDescription
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(minBonus, forKey: "min_bonus")
        try container.encodeIfPresent(onlyNumbers, forKey: "only_numbers")
        try container.encodeIfPresent(skipEmptyDescription, forKey: "skip_empty_description")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                minBonus = try container.decodeIfPresent(Int64.self, forKey: "min_bonus")
                onlyNumbers = try container.decodeIfPresent([String].self, forKey: "only_numbers")
                skipEmptyDescription = try container.decodeIfPresent(Bool.self, forKey: "skip_empty_description")
    }
}

