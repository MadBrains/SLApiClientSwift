//
// DcLoyaltyHistory.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Элемент истории использования механник лояльности */

open class DcLoyaltyHistory: Codable {

    public enum Mechanic: String, Codable { 
        case custom = "custom"
        case cardbinding = "cardBinding"
        case invitecode = "inviteCode"
        case inviteapply = "inviteApply"
        case profileapply = "profileApply"
        case vkgroup = "vkGroup"
    }
    /** Изменение бонусного баланса */
    public var balanceChange: Float?
    /** Применяемая механника */
    public var mechanic: Mechanic?
    /** Текстовое сообщение */
    public var message: String?
    /** Таймштамп события (Unix) */
    public var time: Int64?


    public init(balanceChange: Float?, mechanic: Mechanic?, message: String?, time: Int64?) {
        self.balanceChange = balanceChange
        self.mechanic = mechanic
        self.message = message
        self.time = time
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(balanceChange, forKey: "balanceChange")
        try container.encodeIfPresent(mechanic, forKey: "mechanic")
        try container.encodeIfPresent(message, forKey: "message")
        try container.encodeIfPresent(time, forKey: "time")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                balanceChange = try container.decodeIfPresent(Float.self, forKey: "balanceChange")
                mechanic = try container.decodeIfPresent(Mechanic.self, forKey: "mechanic")
                message = try container.decodeIfPresent(String.self, forKey: "message")
                time = try container.decodeIfPresent(Int64.self, forKey: "time")
    }
}

