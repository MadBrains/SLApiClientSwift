//
// SupportRequestTicket.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Запрос обратной связи */

open class SupportRequestTicket: Codable {

    /** Тело сообщения */
    public var body: String?
    public var properties: [IPropertyValue]?
    /** Название на латиннице (^[0-9a-zA-Z-_]+$) причины обращения */
    public var reason: String
    /** Заголовок обращения (Тема) */
    public var subject: String?


    public init(body: String?, properties: [IPropertyValue]?, reason: String, subject: String?) {
        self.body = body
        self.properties = properties
        self.reason = reason
        self.subject = subject
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(body, forKey: "body")
        try container.encodeIfPresent(properties, forKey: "properties")
        try container.encode(reason, forKey: "reason")
        try container.encodeIfPresent(subject, forKey: "subject")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                body = try container.decodeIfPresent(String.self, forKey: "body")
                properties = try container.decodeIfPresent([IPropertyValue].self, forKey: "properties")
                reason = try container.decode(String.self, forKey: "reason")
                subject = try container.decodeIfPresent(String.self, forKey: "subject")
    }
}

