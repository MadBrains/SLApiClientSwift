//
// ServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ServiceAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceGroups(completion: @escaping ((_ data: ServiceGroupsResponse?,_ error: Error?) -> Void)) {
        getServiceGroupsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/groups/
     - Запрос списка групп и объектов располагающихся в корне.
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "subGroups" : [ {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  }, {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  } ],
  "items" : [ {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  }, {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  } ],
  "group" : {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  }
}}]

     - returns: RequestBuilder<ServiceGroupsResponse> 
     */
    open class func getServiceGroupsWithRequestBuilder() -> RequestBuilder<ServiceGroupsResponse> {
        let path = "/service/groups/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceGroupsResponse>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter groupId: (path) Идентификатор группы 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceGroupsByGroupid(groupId: String, completion: @escaping ((_ data: ServiceGroupsResponse?,_ error: Error?) -> Void)) {
        getServiceGroupsByGroupidWithRequestBuilder(groupId: groupId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/groups/{groupId}/
     - Получить список объектов указанной группы и саму группу
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "subGroups" : [ {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  }, {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  } ],
  "items" : [ {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  }, {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  } ],
  "group" : {
    "parent" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "import" : true,
    "name" : "name",
    "weight" : 0,
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
  }
}}]
     
     - parameter groupId: (path) Идентификатор группы 

     - returns: RequestBuilder<ServiceGroupsResponse> 
     */
    open class func getServiceGroupsByGroupidWithRequestBuilder(groupId: String) -> RequestBuilder<ServiceGroupsResponse> {
        var path = "/service/groups/{groupId}/"
        path = path.replacingOccurrences(of: "{groupId}", with: "\(groupId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceGroupsResponse>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter itemId: (path) Идентификатор элемента 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceItemsByItemid(itemId: String, completion: @escaping ((_ data: ServiceItem?,_ error: Error?) -> Void)) {
        getServiceItemsByItemidWithRequestBuilder(itemId: itemId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/items/{itemId}/
     - Получить услугу
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "image" : "image",
  "import" : true,
  "description" : "description",
  "groups" : [ "groups", "groups" ],
  "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
  "body" : "body",
  "remoteId" : "remoteId",
  "createdAt" : 6,
  "name" : "name",
  "detailImages" : [ "detailImages", "detailImages" ],
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "properties" : [ "", "" ],
  "updatedAt" : 5
}}]
     
     - parameter itemId: (path) Идентификатор элемента 

     - returns: RequestBuilder<ServiceItem> 
     */
    open class func getServiceItemsByItemidWithRequestBuilder(itemId: String) -> RequestBuilder<ServiceItem> {
        var path = "/service/items/{itemId}/"
        path = path.replacingOccurrences(of: "{itemId}", with: "\(itemId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceItem>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceOptions(completion: @escaping ((_ data: ServiceOptions?,_ error: Error?) -> Void)) {
        getServiceOptionsWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/options/
     - Запрос списка параметров сервиса.
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "timeSlotSize" : 0.80082819046101150206595775671303272247314453125
}}]

     - returns: RequestBuilder<ServiceOptions> 
     */
    open class func getServiceOptionsWithRequestBuilder() -> RequestBuilder<ServiceOptions> {
        let path = "/service/options/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceOptions>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceProperties(completion: @escaping ((_ data: [IProperty]?,_ error: Error?) -> Void)) {
        getServicePropertiesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/properties/
     - Запрос списка свойств услуг
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
}, {
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
} ]}]

     - returns: RequestBuilder<[IProperty]> 
     */
    open class func getServicePropertiesWithRequestBuilder() -> RequestBuilder<[IProperty]> {
        let path = "/service/properties/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[IProperty]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter propertyKey: (path) Идентификатор свойства элемента 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServicePropertiesByPropertykey(propertyKey: String, completion: @escaping ((_ data: IProperty?,_ error: Error?) -> Void)) {
        getServicePropertiesByPropertykeyWithRequestBuilder(propertyKey: propertyKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/properties/{propertyKey}/
     - Запрос свойства услуги
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
}}]
     
     - parameter propertyKey: (path) Идентификатор свойства элемента 

     - returns: RequestBuilder<IProperty> 
     */
    open class func getServicePropertiesByPropertykeyWithRequestBuilder(propertyKey: String) -> RequestBuilder<IProperty> {
        var path = "/service/properties/{propertyKey}/"
        path = path.replacingOccurrences(of: "{propertyKey}", with: "\(propertyKey)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<IProperty>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter limit: (query) Количество выбираемых элементов (optional, default to 50)
     - parameter offset: (query) Смещение от начала выборки (optional, default to 0)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResources(limit: Int64? = nil, offset: Int64? = nil, completion: @escaping ((_ data: [ServiceResource]?,_ error: Error?) -> Void)) {
        getServiceResourcesWithRequestBuilder(limit: limit, offset: offset).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/
     - Список ресурсов
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "createdAt" : 0,
  "image" : "image",
  "import" : true,
  "name" : "name",
  "description" : "description",
  "detailImages" : [ "detailImages", "detailImages" ],
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "body",
  "properties" : [ "", "" ],
  "remoteId" : "remoteId",
  "updatedAt" : 6
}, {
  "createdAt" : 0,
  "image" : "image",
  "import" : true,
  "name" : "name",
  "description" : "description",
  "detailImages" : [ "detailImages", "detailImages" ],
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "body",
  "properties" : [ "", "" ],
  "remoteId" : "remoteId",
  "updatedAt" : 6
} ]}]
     
     - parameter limit: (query) Количество выбираемых элементов (optional, default to 50)
     - parameter offset: (query) Смещение от начала выборки (optional, default to 0)

     - returns: RequestBuilder<[ServiceResource]> 
     */
    open class func getServiceResourcesWithRequestBuilder(limit: Int64? = nil, offset: Int64? = nil) -> RequestBuilder<[ServiceResource]> {
        let path = "/service/resources/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "limit": limit?.encodeToJSON(), 
            "offset": offset?.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<[ServiceResource]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter itemId: (path) Идентификатор ресурса 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesByResourceid(itemId: String, completion: @escaping ((_ data: ServiceResource?,_ error: Error?) -> Void)) {
        getServiceResourcesByResourceidWithRequestBuilder(itemId: itemId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/{resourceId}/
     - Получить ресурс
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "createdAt" : 0,
  "image" : "image",
  "import" : true,
  "name" : "name",
  "description" : "description",
  "detailImages" : [ "detailImages", "detailImages" ],
  "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "body" : "body",
  "properties" : [ "", "" ],
  "remoteId" : "remoteId",
  "updatedAt" : 6
}}]
     
     - parameter itemId: (path) Идентификатор ресурса 

     - returns: RequestBuilder<ServiceResource> 
     */
    open class func getServiceResourcesByResourceidWithRequestBuilder(itemId: String) -> RequestBuilder<ServiceResource> {
        var path = "/service/resources/{resourceId}/"
        path = path.replacingOccurrences(of: "{itemId}", with: "\(itemId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceResource>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesProperties(completion: @escaping ((_ data: [IProperty]?,_ error: Error?) -> Void)) {
        getServiceResourcesPropertiesWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/properties/
     - Запрос списка свойств ресурсов
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
}, {
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
} ]}]

     - returns: RequestBuilder<[IProperty]> 
     */
    open class func getServiceResourcesPropertiesWithRequestBuilder() -> RequestBuilder<[IProperty]> {
        let path = "/service/resources/properties/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[IProperty]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter propertyKey: (path) Идентификатор свойства элемента 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesPropertiesByPropertykey(propertyKey: String, completion: @escaping ((_ data: IProperty?,_ error: Error?) -> Void)) {
        getServiceResourcesPropertiesByPropertykeyWithRequestBuilder(propertyKey: propertyKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/properties/{propertyKey}/
     - Запрос свойства ресурса
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "view" : "vNone",
  "import" : true,
  "extra" : "{}",
  "name" : "name",
  "type" : "ipString",
  "key" : "key"
}}]
     
     - parameter propertyKey: (path) Идентификатор свойства элемента 

     - returns: RequestBuilder<IProperty> 
     */
    open class func getServiceResourcesPropertiesByPropertykeyWithRequestBuilder(propertyKey: String) -> RequestBuilder<IProperty> {
        var path = "/service/resources/properties/{propertyKey}/"
        path = path.replacingOccurrences(of: "{propertyKey}", with: "\(propertyKey)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<IProperty>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 
     - parameter begin: (query) Дата начала выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 
     - parameter end: (query) Дата окончания выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesTimeByResourceidByShopidDate(itemId: String, shopId: String, begin: String, end: String, completion: @escaping ((_ data: [ServiceDate]?,_ error: Error?) -> Void)) {
        getServiceResourcesTimeByResourceidByShopidDateWithRequestBuilder(itemId: itemId, shopId: shopId, begin: begin, end: end).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/time/{resourceId}/{shopId}/date/
     - Расписания ресурса в магазине по дате
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ "", "" ]}]
     
     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 
     - parameter begin: (query) Дата начала выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 
     - parameter end: (query) Дата окончания выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 

     - returns: RequestBuilder<[ServiceDate]> 
     */
    open class func getServiceResourcesTimeByResourceidByShopidDateWithRequestBuilder(itemId: String, shopId: String, begin: String, end: String) -> RequestBuilder<[ServiceDate]> {
        var path = "/service/resources/time/{resourceId}/{shopId}/date/"
        path = path.replacingOccurrences(of: "{itemId}", with: "\(itemId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{shopId}", with: "\(shopId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "begin": begin, 
            "end": end
        ])
        

        let requestBuilder: RequestBuilder<[ServiceDate]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 
     - parameter date: (path) Дата рассписания по RFC 3339, section 5.6, for example, 2017-07-21 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesTimeByResourceidByShopidDateByDate(itemId: String, shopId: String, date: String, completion: @escaping ((_ data: ServiceDate?,_ error: Error?) -> Void)) {
        getServiceResourcesTimeByResourceidByShopidDateByDateWithRequestBuilder(itemId: itemId, shopId: shopId, date: date).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/time/{resourceId}/{shopId}/date/{date}/
     - Расписания ресурса в магазине по дате
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=""}]
     
     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 
     - parameter date: (path) Дата рассписания по RFC 3339, section 5.6, for example, 2017-07-21 

     - returns: RequestBuilder<ServiceDate> 
     */
    open class func getServiceResourcesTimeByResourceidByShopidDateByDateWithRequestBuilder(itemId: String, shopId: String, date: String) -> RequestBuilder<ServiceDate> {
        var path = "/service/resources/time/{resourceId}/{shopId}/date/{date}/"
        path = path.replacingOccurrences(of: "{itemId}", with: "\(itemId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{shopId}", with: "\(shopId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{date}", with: "\(date)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceDate>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesTimeByResourceidByShopidWeek(itemId: String, shopId: String, completion: @escaping ((_ data: ServiceWeek?,_ error: Error?) -> Void)) {
        getServiceResourcesTimeByResourceidByShopidWeekWithRequestBuilder(itemId: itemId, shopId: shopId).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/time/{resourceId}/{shopId}/week/
     - Расписания ресурса в магазине на неделю
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example={
  "tu" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "mo" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "su" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "th" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "fr" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "sa" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  },
  "we" : {
    "breaks" : [ {
      "end" : 64800.0,
      "begin" : 32400.0
    }, {
      "end" : 64800.0,
      "begin" : 32400.0
    } ],
    "workTime" : {
      "end" : 64800.0,
      "begin" : 32400.0
    }
  }
}}]
     
     - parameter itemId: (path) Идентификатор ресурса 
     - parameter shopId: (path) Идентификатор магазина 

     - returns: RequestBuilder<ServiceWeek> 
     */
    open class func getServiceResourcesTimeByResourceidByShopidWeekWithRequestBuilder(itemId: String, shopId: String) -> RequestBuilder<ServiceWeek> {
        var path = "/service/resources/time/{resourceId}/{shopId}/week/"
        path = path.replacingOccurrences(of: "{itemId}", with: "\(itemId)", options: .literal, range: nil)
        path = path.replacingOccurrences(of: "{shopId}", with: "\(shopId)", options: .literal, range: nil)
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ServiceWeek>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter shopId: (query) Идентификатор магазина (optional)
     - parameter resourceId: (query) Идентификатор ресурса (optional)
     - parameter begin: (query) Дата начала выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 (optional)
     - parameter end: (query) Дата окончания выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getServiceResourcesTimeDate(shopId: String? = nil, resourceId: String? = nil, begin: String? = nil, end: String? = nil, completion: @escaping ((_ data: [ServiceDateLinked]?,_ error: Error?) -> Void)) {
        getServiceResourcesTimeDateWithRequestBuilder(shopId: shopId, resourceId: resourceId, begin: begin, end: end).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - GET /service/resources/time/date/
     - Расписание по датам. Все параметры не являются обязательными и применяются как пересечение (and)
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "date" : "",
  "resource" : {
    "createdAt" : 0,
    "image" : "image",
    "import" : true,
    "name" : "name",
    "description" : "description",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "body" : "body",
    "properties" : [ "", "" ],
    "remoteId" : "remoteId",
    "updatedAt" : 6
  },
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "date" : "",
  "resource" : {
    "createdAt" : 0,
    "image" : "image",
    "import" : true,
    "name" : "name",
    "description" : "description",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "body" : "body",
    "properties" : [ "", "" ],
    "remoteId" : "remoteId",
    "updatedAt" : 6
  },
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]
     
     - parameter shopId: (query) Идентификатор магазина (optional)
     - parameter resourceId: (query) Идентификатор ресурса (optional)
     - parameter begin: (query) Дата начала выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 (optional)
     - parameter end: (query) Дата окончания выборки включительно по RFC 3339, section 5.6, for example, 2017-07-21 (optional)

     - returns: RequestBuilder<[ServiceDateLinked]> 
     */
    open class func getServiceResourcesTimeDateWithRequestBuilder(shopId: String? = nil, resourceId: String? = nil, begin: String? = nil, end: String? = nil) -> RequestBuilder<[ServiceDateLinked]> {
        let path = "/service/resources/time/date/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "shopId": shopId, 
            "resourceId": resourceId, 
            "begin": begin, 
            "end": end
        ])
        

        let requestBuilder: RequestBuilder<[ServiceDateLinked]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postServicePriceQuery(body: ServicePriceQuery, completion: @escaping ((_ data: [ServicePriceInShopResponce]?,_ error: Error?) -> Void)) {
        postServicePriceQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /service/price/query/
     - Запрос поиска стоимости услуг
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "price" : 0.08008282,
  "service" : {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  },
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
}, {
  "price" : 0.08008282,
  "service" : {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  },
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91"
} ]}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<[ServicePriceInShopResponce]> 
     */
    open class func postServicePriceQueryWithRequestBuilder(body: ServicePriceQuery) -> RequestBuilder<[ServicePriceInShopResponce]> {
        let path = "/service/price/query/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ServicePriceInShopResponce]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postServiceResourcesItemsQuery(body: ServiceResourceQuery, completion: @escaping ((_ data: [ServiceServiceInResourceResponce]?,_ error: Error?) -> Void)) {
        postServiceResourcesItemsQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /service/resources/items/query/
     - Запрос поиска ресурсов по услугам
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "resource" : {
    "createdAt" : 0,
    "image" : "image",
    "import" : true,
    "name" : "name",
    "description" : "description",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "body" : "body",
    "properties" : [ "", "" ],
    "remoteId" : "remoteId",
    "updatedAt" : 6
  },
  "service" : {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  }
}, {
  "resource" : {
    "createdAt" : 0,
    "image" : "image",
    "import" : true,
    "name" : "name",
    "description" : "description",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "body" : "body",
    "properties" : [ "", "" ],
    "remoteId" : "remoteId",
    "updatedAt" : 6
  },
  "service" : {
    "image" : "image",
    "import" : true,
    "description" : "description",
    "groups" : [ "groups", "groups" ],
    "timeSlots" : 1.46581298050294517310021547018550336360931396484375,
    "body" : "body",
    "remoteId" : "remoteId",
    "createdAt" : 6,
    "name" : "name",
    "detailImages" : [ "detailImages", "detailImages" ],
    "id" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
    "properties" : [ "", "" ],
    "updatedAt" : 5
  }
} ]}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<[ServiceServiceInResourceResponce]> 
     */
    open class func postServiceResourcesItemsQueryWithRequestBuilder(body: ServiceResourceQuery) -> RequestBuilder<[ServiceServiceInResourceResponce]> {
        let path = "/service/resources/items/query/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ServiceServiceInResourceResponce]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postServiceTimeQuery(body: ServiceTimeQuery, completion: @escaping ((_ data: [ServiceTimeblock]?,_ error: Error?) -> Void)) {
        postServiceTimeQueryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     - POST /service/time/query/
     - Запрос поиска временных слотов
     - API Key:
       - type: apiKey x-cid 
       - name: x-cid
     - API Key:
       - type: apiKey x-token 
       - name: x-token
     - examples: [{contentType=application/json, example=[ {
  "date" : "2017-07-21",
  "resourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "time" : 32400.0
}, {
  "date" : "2017-07-21",
  "resourceId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "shopId" : "046b6c7f-0b8a-43b9-b35d-6489e6daee91",
  "time" : 32400.0
} ]}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<[ServiceTimeblock]> 
     */
    open class func postServiceTimeQueryWithRequestBuilder(body: ServiceTimeQuery) -> RequestBuilder<[ServiceTimeblock]> {
        let path = "/service/time/query/"
        let URLString = SLApiClientSwiftAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ServiceTimeblock]>.Type = SLApiClientSwiftAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
