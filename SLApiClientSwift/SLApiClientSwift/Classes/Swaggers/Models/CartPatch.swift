//
// CartPatch.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Объект с данными для обновления корзины */

open class CartPatch: Codable {

    public var delivery: Delivery?
    public var items: CartItems?
    public var loyalty: Loyalty?
    public var stage: Stage?
    /** Версия, на базе которой делается обновление */
    public var version: Int?


    public init(delivery: Delivery?, items: CartItems?, loyalty: Loyalty?, stage: Stage?, version: Int?) {
        self.delivery = delivery
        self.items = items
        self.loyalty = loyalty
        self.stage = stage
        self.version = version
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(delivery, forKey: "delivery")
        try container.encodeIfPresent(items, forKey: "items")
        try container.encodeIfPresent(loyalty, forKey: "loyalty")
        try container.encodeIfPresent(stage, forKey: "stage")
        try container.encodeIfPresent(version, forKey: "version")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                delivery = try container.decodeIfPresent(Delivery.self, forKey: "delivery")
                items = try container.decodeIfPresent(CartItems.self, forKey: "items")
                loyalty = try container.decodeIfPresent(Loyalty.self, forKey: "loyalty")
                stage = try container.decodeIfPresent(Stage.self, forKey: "stage")
                version = try container.decodeIfPresent(Int.self, forKey: "version")
    }
}

