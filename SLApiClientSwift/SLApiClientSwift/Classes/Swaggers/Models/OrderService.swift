//
// OrderService.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Услуги в заказе */

open class OrderService: Codable {

    /** Дата по RFC 3339, section 5.6, for example, 2017-07-21T16:39:57-05:00 */
    public var datetime: String?
    public var items: [OrderServiceItem]?
    /** Идентификатор ресурса (UUID) */
    public var resourceId: UUID?
    /** Идентификатор магазина (UUID) */
    public var shopId: UUID?


    public init(datetime: String?, items: [OrderServiceItem]?, resourceId: UUID?, shopId: UUID?) {
        self.datetime = datetime
        self.items = items
        self.resourceId = resourceId
        self.shopId = shopId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(datetime, forKey: "datetime")
        try container.encodeIfPresent(items, forKey: "items")
        try container.encodeIfPresent(resourceId, forKey: "resourceId")
        try container.encodeIfPresent(shopId, forKey: "shopId")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                datetime = try container.decodeIfPresent(String.self, forKey: "datetime")
                items = try container.decodeIfPresent([OrderServiceItem].self, forKey: "items")
                resourceId = try container.decodeIfPresent(UUID.self, forKey: "resourceId")
                shopId = try container.decodeIfPresent(UUID.self, forKey: "shopId")
    }
}

