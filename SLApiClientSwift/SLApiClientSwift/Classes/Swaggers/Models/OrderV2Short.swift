//
// OrderV2Short.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Сокращенный объект заказа */

open class OrderV2Short: Codable {

    /** Дата создания */
    public var creationTime: Date?
    /** Объект с кастомными полями. Объект, где ключи и значения должны быть строками. */
    public var customersData: Any?
    /** Идентификатор заказа */
    public var id: UUID?
    /** Человекочитаемый номер заказа */
    public var number: String?
    public var status: OrdersV2StatusShort?
    /** Дата обновления */
    public var updateTime: Date?


    public init(creationTime: Date?, customersData: Any?, id: UUID?, number: String?, status: OrdersV2StatusShort?, updateTime: Date?) {
        self.creationTime = creationTime
        self.customersData = customersData
        self.id = id
        self.number = number
        self.status = status
        self.updateTime = updateTime
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(creationTime, forKey: "creationTime")
        try container.encodeIfPresent(customersData, forKey: "customersData")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(number, forKey: "number")
        try container.encodeIfPresent(status, forKey: "status")
        try container.encodeIfPresent(updateTime, forKey: "updateTime")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                creationTime = try container.decodeIfPresent(Date.self, forKey: "creationTime")
                customersData = try container.decodeIfPresent(Any.self, forKey: "customersData")
                id = try container.decodeIfPresent(UUID.self, forKey: "id")
                number = try container.decodeIfPresent(String.self, forKey: "number")
                status = try container.decodeIfPresent(OrdersV2StatusShort.self, forKey: "status")
                updateTime = try container.decodeIfPresent(Date.self, forKey: "updateTime")
    }
}

