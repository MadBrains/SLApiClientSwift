//
// ServiceResourceQuery.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Объект запроса поиска ресурсов по услугам. Идентификаторы services выбираются через объединение (or), аналогично resources. При этом services и resources вместе выбирается через пересечение (and). Если service или resources не переданы, то на не переданное подмножестно не накладывается ограничение. */

open class ServiceResourceQuery: Codable {

    /** Количество выбираемых элементов */
    public var limit: Int64?
    /** Смещение от начала выборки */
    public var offset: Int64?
    /** Массив идентификаторов ресурсов */
    public var resources: [String]?
    /** Массив идентификаторов услуг */
    public var services: [String]?


    public init(limit: Int64?, offset: Int64?, resources: [String]?, services: [String]?) {
        self.limit = limit
        self.offset = offset
        self.resources = resources
        self.services = services
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(limit, forKey: "limit")
        try container.encodeIfPresent(offset, forKey: "offset")
        try container.encodeIfPresent(resources, forKey: "resources")
        try container.encodeIfPresent(services, forKey: "services")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                limit = try container.decodeIfPresent(Int64.self, forKey: "limit")
                offset = try container.decodeIfPresent(Int64.self, forKey: "offset")
                resources = try container.decodeIfPresent([String].self, forKey: "resources")
                services = try container.decodeIfPresent([String].self, forKey: "services")
    }
}

