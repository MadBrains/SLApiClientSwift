//
// TalanBookmarks.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Объект закладки talan */

open class TalanBookmarks: Codable {

    public var body: SearchRequest
    /** Количество новых предложений по закладке */
    public var count: Int?
    /** Описание закладки */
    public var description: String?
    /** Идентификатор */
    public var id: UUID?
    /** Если true - то сервер будет уведомлять о новых квартирах в закладке */
    public var notification: Bool
    /** Название закладки */
    public var title: String


    public init(body: SearchRequest, count: Int?, description: String?, id: UUID?, notification: Bool, title: String) {
        self.body = body
        self.count = count
        self.description = description
        self.id = id
        self.notification = notification
        self.title = title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(body, forKey: "body")
        try container.encodeIfPresent(count, forKey: "count")
        try container.encodeIfPresent(description, forKey: "description")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encode(notification, forKey: "notification")
        try container.encode(title, forKey: "title")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                body = try container.decode(SearchRequest.self, forKey: "body")
                count = try container.decodeIfPresent(Int.self, forKey: "count")
                description = try container.decodeIfPresent(String.self, forKey: "description")
                id = try container.decodeIfPresent(UUID.self, forKey: "id")
                notification = try container.decode(Bool.self, forKey: "notification")
                title = try container.decode(String.self, forKey: "title")
    }
}

