//
// TalanConfirmationQuery.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Объект подтверждения кода авторизации. Телефон содержит только цифры, другие символы недопустимы. Email проверяется по регулярному выражению */

open class TalanConfirmationQuery: Codable {

    public enum ModelType: String, Codable { 
        case phone = "phone"
        case email = "email"
    }
    public var appType: String
    public var code: String
    /** Тип value: phone, email   * email - \&quot;(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\&quot;   * phone - \&quot;^[0-9]{11,13}$\&quot; (только числа от 11 до 13 символов)  */
    public var type: ModelType
    /** email or phone */
    public var value: String


    public init(appType: String, code: String, type: ModelType, value: String) {
        self.appType = appType
        self.code = code
        self.type = type
        self.value = value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(appType, forKey: "appType")
        try container.encode(code, forKey: "code")
        try container.encode(type, forKey: "type")
        try container.encode(value, forKey: "value")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                appType = try container.decode(String.self, forKey: "appType")
                code = try container.decode(String.self, forKey: "code")
                type = try container.decode(ModelType.self, forKey: "type")
                value = try container.decode(String.self, forKey: "value")
    }
}

