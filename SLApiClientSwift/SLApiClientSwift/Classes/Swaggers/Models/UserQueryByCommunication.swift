//
// UserQueryByCommunication.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Объект запроса пользователей */

open class UserQueryByCommunication: Codable {

    public enum ModelType: String, Codable { 
        case email = "email"
        case phone = "phone"
        case login = "login"
        case vksocial = "vkSocial"
        case fbsocial = "fbSocial"
    }
    /** Фильтр по флагу подтвержденности. false - это не подтвержденные, true - подтвержденные */
    public var confirm: Bool
    /** Строка для поиска по тексту по полям login или value в communication. Строка должна точно соответствовать. */
    public var query: String
    /** Тип поля */
    public var type: ModelType


    public init(confirm: Bool, query: String, type: ModelType) {
        self.confirm = confirm
        self.query = query
        self.type = type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(confirm, forKey: "confirm")
        try container.encode(query, forKey: "query")
        try container.encode(type, forKey: "type")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                confirm = try container.decode(Bool.self, forKey: "confirm")
                query = try container.decode(String.self, forKey: "query")
                type = try container.decode(ModelType.self, forKey: "type")
    }
}

