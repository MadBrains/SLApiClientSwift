//
// VerifyCheckQuery.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class VerifyCheckQuery: Codable {

    public enum ModelType: String, Codable { 
        case phone = "phone"
        case email = "email"
    }
    /** Надо ли совершать проверку, существует ли такое же подтвержденное средство связи у другого пользователя */
    public var checkUnique: Bool?
    /** * phone - \&quot;^[0-9]{11,13}$\&quot; (только числа от 11 до 13 символов) * email  */
    public var type: ModelType
    /** Телефон или электронная почта */
    public var value: String


    public init(checkUnique: Bool?, type: ModelType, value: String) {
        self.checkUnique = checkUnique
        self.type = type
        self.value = value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(checkUnique, forKey: "checkUnique")
        try container.encode(type, forKey: "type")
        try container.encode(value, forKey: "value")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

                checkUnique = try container.decodeIfPresent(Bool.self, forKey: "checkUnique")
                type = try container.decode(ModelType.self, forKey: "type")
                value = try container.decode(String.self, forKey: "value")
    }
}

